#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to delete a snapshot of an image
###############################################################################

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
else
    LIB_LOCATION=$ONE_LOCATION/lib
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
ZFS_UTILS=${DRIVER_PATH}/zfs_utils.sh

source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/../../etc/datastore/zfs_iscsi/zfs.conf

# -------- Get image and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/POOL_NAME \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SOURCE \
		    /DS_DRIVER_ACTION_DATA/IMAGE/TARGET_SNAPSHOT)


unset i

BRIDGE_LIST="${XPATH_ELEMENTS[i++]}"
POOL_NAME="${XPATH_ELEMENTS[i++]:-$POOL_NAME}"
ZVOL_BASE="${XPATH_ELEMENTS[i++]}"
IMAGE_NAME=$(echo $ZVOL_BASE | awk -F: '{print $NF}')
ZVOL_SRC="$POOL_NAME/$IMAGE_NAME"
SNAP_ID="${XPATH_ELEMENTS[i++]}"

DST_HOST=`get_destination_host $ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

SNAP_DELETE_CMD=$(cat <<EOF
    SUDO="${SUDO}"

    ZVOL_TGT=\$(zvol_find_snap $ZVOL_SRC $SNAP_ID)

    if [ -z "\$ZVOL_TGT" ]; then
        echo "Target ZVOL not found." >&2
        exit 1
    fi

    $SUDO zfs release keep \${ZVOL_TGT}@$SNAP_ID
    $SUDO zfs destroy \${ZVOL_TGT}@$SNAP_ID

    if [ "\${ZVOL_TGT}" != "$ZVOL_SRC" ]; then
        zvol_rename_rm $ZVOL_SRC \${ZVOL_TGT}
    fi
EOF
)

ssh_exec_and_log_stdin "$DST_HOST" "$SNAP_DELETE_CMD" "$ZFS_UTILS" \
                 "Error deleting snapshot $ZVOL_SRC-$SNAP_ID@$SNAP_ID"
