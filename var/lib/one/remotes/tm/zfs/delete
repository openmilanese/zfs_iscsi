#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# DELETE <host:remote_system_ds/disk.i|host:remote_system_ds/>
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host

DST=$1
VM_ID=$2
DS_ID=$3

#--------------------------------------------------------------------------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
    LIB_LOCATION=/usr/lib/one
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
    LIB_LOCATION=$ONE_LOCATION/lib
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../etc/datastore/zfs/zfs.conf
source ${DRIVER_PATH}/../../datastore/libfs.sh

ZFS_UTILS=${DRIVER_PATH}/../../datastore/zfs/zfs_utils.sh

#-------------------------------------------------------------------------------
# Process destination
#-------------------------------------------------------------------------------

DST_PATH=`arg_path $DST`
DST_HOST=`arg_host $DST`

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

#-------------------------------------------------------------------------------
# Delete and exit if directory
#-------------------------------------------------------------------------------

if [ `is_disk $DST_PATH` -eq 0 ]; then
    # Directory: delete checkpoint and directory

    unset i j XPATH_ELEMENTS

    while IFS= read -r -d '' element; do
        XPATH_ELEMENTS[i++]="$element"
    done < <(onedatastore show -x $DS_ID | $XPATH \
                        /DATASTORE/TEMPLATE/SOURCE \
                        /DATASTORE/TEMPLATE/CLONE \
                        /DATASTORE/TEMPLATE/POOL_NAME \
                        /DATASTORE/TEMPLATE/BRIDGE_LIST)

    SRC="${XPATH_ELEMENTS[j++]}"
    CLONE="${XPATH_ELEMENTS[j++]}"
    POOL_NAME="${XPATH_ELEMENTS[j++]:-$POOL_NAME}"
    BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"

    DST_HOST=`get_destination_host $VM_ID`

    if [ -z "$DST_HOST" ]; then
        error_message "Datastore template missing 'BRIDGE_LIST' attribute."
        exit -1
    fi

    ZVOL_SRC_CHECKPOINT="${POOL_NAME}/one-sys-${VM_ID}-checkpoint"

    ssh_exec_and_log "$DST_HOST" "$SUDO zfs destroy $ZVOL_SRC_CHECKPOINT 2>/dev/null || exit 0" \
                 "Error deleting $ZVOL_SRC_CHECKPOINT in $DST_HOST"

    log "Deleting $DST_PATH"

    DST_HOST=`arg_host $DST`

    ssh_exec_and_log "$DST_HOST" "rm -rf $DST_PATH" "Error deleting $DST_PATH"
    exit 0
fi

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

DISK_ID=$(echo "$DST_PATH" | $AWK -F. '{print $NF}')

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VM_ID | $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/CLONE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/POOL_NAME)

SRC="${XPATH_ELEMENTS[j++]}"
CLONE="${XPATH_ELEMENTS[j++]}"
POOL_NAME="${XPATH_ELEMENTS[j++]:-$POOL_NAME}"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
        XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $DS_ID| $XPATH  \
                    /DATASTORE/TEMPLATE/BRIDGE_LIST )

BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"

DST_HOST=`get_destination_host $VM_ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

# No need to delete no cloned images
if [ "$CLONE" = "NO" ]; then
    exit 0
fi

if [ -n "$SRC" ]; then
    # cloned, so the name will be "<pool>/one-<imageid>-<vmid>-<diskid>"
    ZVOL_BASE=$(echo $SRC | awk -F/ '{print $(NF-1)"/"$NF}')
    ZVOL_SRC="${ZVOL_BASE}-${VM_ID}-${DISK_ID}"
    ZVOL_SNAP="${VM_ID}-${DISK_ID}"
else
    # volatile
    ZVOL_SRC="${POOL_NAME}/one-sys-${VM_ID}-${DISK_ID}"
    ZVOL_SNAP=""
fi

#-------------------------------------------------------------------------------
# Delete the device
#-------------------------------------------------------------------------------

log "Deleting $DST_PATH"

DELETE_CMD=$(cat <<EOF
    SUDO="${SUDO}"

    zvol_rm_r \$(zvol_top_parent $ZVOL_SRC)

    if [ -n "$ZVOL_SNAP" ]; then
        zvol_rm_snap $ZVOL_SRC $ZVOL_SNAP
    fi
EOF
)

ssh_exec_and_log_stdin "$DST_HOST" "$DELETE_CMD" "$ZFS_UTILS" \
                 "Error deleting $ZVOL_SRC in $DST_HOST"
