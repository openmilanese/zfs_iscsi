#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2019, OpenNebula Project, OpenNebula Systems                #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# snap_revert host:parent_image snap_id vmid ds_id

SRC=$1
SNAP_ID=$2
VM_ID=$3
DS_ID=$4

#--------------------------------------------------------------------------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
    LIB_LOCATION=/usr/lib/one
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
    LIB_LOCATION=$ONE_LOCATION/lib
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../etc/datastore/zfs/zfs.conf
source ${DRIVER_PATH}/../../datastore/libfs.sh

ZFS_UTILS=${DRIVER_PATH}/../../datastore/zfs/zfs_utils.sh

#-------------------------------------------------------------------------------
# Set dst path and dir
#-------------------------------------------------------------------------------

SRC_HOST=`arg_host $SRC`
SRC_PATH=`arg_path $SRC`

#-------------------------------------------------------------------------------
# Get Image information
#-------------------------------------------------------------------------------

DISK_ID=$(echo "$SRC_PATH" | $AWK -F. '{print $NF}')

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VM_ID| $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SOURCE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/CLONE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/TYPE )

ZVOL_BASE="${XPATH_ELEMENTS[j++]}"
CLONE="${XPATH_ELEMENTS[j++]}"
TYPE="${XPATH_ELEMENTS[j++]}"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
        XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $DS_ID| $XPATH  \
                    /DATASTORE/TEMPLATE/POOL_NAME \
		    /DATASTORE/TEMPLATE/BRIDGE_LIST)

POOL_NAME="${XPATH_ELEMENTS[j++]:-$POOL_NAME}"
BRIDGE_LIST="${XPATH_ELEMENTS[j++]}"

DST_HOST=`get_destination_host $VM_ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

ZVOL_SRC=$(echo $ZVOL_BASE | awk -F/ '{print $(NF-1)"/"$NF}')

if [ "$CLONE" = "NO" ]; then
    ZVOL_DST="${ZVOL_SRC}"
else
    ZVOL_DST="${ZVOL_SRC}-${VM_ID}-${DISK_ID}"
fi

#-------------------------------------------------------------------------------
# Revert to Snapshot. Using the following tree structure
#
# one-3-13-0-1:2:3
# ----------------
# | @1 (snap 1)  | revert to 2
# | @2 (snap 2)  |------------
# | @3 (snap 3)  | clone     |
# ----------------           |
#                            V
#                      one-3-13-0-4:5 (stores snaps @4,@5 children of @2)
#                      --------------
#        revert to 4   | @4 (snap 4)|
#        --------------| @5 (snap 5)|
#        |  clone      --------------
#        |
#        V
#  one-3-13-0 (current volume)
#  --------------
#  | @6 (snap 6)|
#  --------------
#-------------------------------------------------------------------------------

if [ "${TYPE}" != 'BLOCK' ]; then
    error_message "$script_name: Operation not supported on disk type ${TYPE}"
    exit 1
fi

SNAP_REVERT_CMD=$(cat <<EOF
    SUDO="${SUDO}"

    zvol_rename_rm $ZVOL_DST $ZVOL_DST

    ZVOL_TGT=\$(zvol_find_snap $ZVOL_DST $SNAP_ID)

    if [ -z "\$ZVOL_TGT" ]; then
        echo "Target ZVOL not found." >&2
        exit 1
    fi

    $SUDO zfs clone \${ZVOL_TGT}@$SNAP_ID $ZVOL_DST
EOF
)

ssh_exec_and_log_stdin "$DST_HOST" "$SNAP_REVERT_CMD" "$ZFS_UTILS" \
                 "Error reverting snapshot $SNAP_ID for $ZVOL_DST"

